URL schemes for Gallery

http://127.0.0.1:8888/              -> Internally remapped to /albums
http://127.0.0.1:8888/albums        -> displays the root for the albums folder
http://127.0.0.1:8888/resources     -> static files from the /resources folder tree 
                                        (e.g. Javascript, CSS, etc)
                                        
http://127.0.0.1:8888/thumbnails    -> static files from the /thumbnails folder tree

?sort		-> Set the sort value in the cookie:
		        Sort Types - 
		            0   - Name Sort (A..Z)
		            1   - Name Sort (Z..A) - Reversed

		            2   - Last Modified Sort (Oldest .. Newest)
		            3   - Last Modified Sort (Newest .. Oldest)

		            4   - Creation Time Sort (Oldest .. Newest)            
		            5   - Creation Time Sort (Newest .. Oldest)            
				

?srch-term 	-> value to run an md-find search on, for the current directory and below

Semantic Web Paths - 

i.e. 	www.examples.com/albums/test_folder/1	 - Display Page 1 items in test_folder
	www.examples.com/albums/test_folder/1/15 - item # 15 from Page 1 in test_folder
	www.examples.com/albums/test_folder/1/6/1 - item # 6 from test_folder, page 1, is presumably
				an archive file.  This will display page #1 of the archive.
	www.examples.com/albums/test_folder/1/6/1/8 - item # 6 from test_folder, page 1, is presumably
				an archive file.  This will display item #8 from page #1 of the archive.

Disadvantage is that you can’t have a file that is only a numeric name.  

i.e. 4

But 4.zip would work, as well as zip4 or 4zip.  A purely numeric name is reserved for the semantic
URLs.

If the last item in the URL is a integer (only an integer) that is the page number to fetch.  Please note, only an integer, so a composite (page-44, page44, 44page, folder2) do not count.

Conventions - 


Consider adding - 

?ots=xyz	    -> One time sort.  Give internal validation to the sort method 
			so if the client reloads the page, and the sort scheme has been
			changed, it will use the “proper” sort scheme
    

plugins - 

	Plugins are ATOMIC constructs.  They are the lowest level of support, for thumbnails.  

	**They create the thumbnail**

	They do not identify the thumbnail candidate, they just do the work.  

	Containers (ZIP, RAR, etc) are going to be tricky with plugins.  

	The container must be identified, but directory_caching already does this.  For the container,
	we need to recognize that this will be *RECURSIVE*.

	1) identify container (directory_caching)
	2) Get File list of container (directory_caching)
	3) Pick candidate from file list (gallery)
	4) Ask for Thumbnail from container plugin (e.g. RAR), and supply target_size, save_to_thumbnail folder

Containers are not plugins.

Directory’s are not needed to be plugins.

Thumbnails are

<filename+dot_extension>_thumb<size>.png
