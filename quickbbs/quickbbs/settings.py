"""
Django settings for quickbbs project.

Generated by 'django-admin startproject' using Django 1.9.6.

For more information on this file, see
https://docs.djangoproject.com/en/1.9/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/1.9/ref/settings/
"""

import os
import socket
from pathlib import Path

import django_icons
from django_htmx.jinja import django_htmx_script
import humanize

# import quickbbs.jinjaenv
from quickbbs.quickbbs_settings import *

# from .logger import LOGGING

#
#   Debug, enables the debugging mode
#
DEBUG = False
DEBUG = not DEBUG
print(f"* Debug Mode is {DEBUG}")

#   Django Debug Toolbar, is controlled separately from the debug mode,
#   so that timings can be w/o debug mode performance penalty.
# DEBUG_TOOLBAR = True
DEBUG_TOOLBAR = DEBUG
# DEBUG_TOOLBAR = False
print(f"* Debug-toolbar is {DEBUG_TOOLBAR}")
# Demo mode, redirects the database to a different database container, and album path.
# Useful for demonstrating the software without using your master database.
#
ALBUMS_PATH = "/Volumes/C-8TB/Gallery/quickbbs".lower()

ALLOWED_HOSTS = [
    "nerv.local",
    "localhost",
    "127.0.0.1",
    "192.168.1.67",
]

INTERNAL_IPS = ["localhost", "127.0.0.1", "nerv.local", "192.168.1.67"]
machine_name = socket.gethostname().lower()
print(f"* Running on {machine_name}")


# See https://releases.jquery.com/jquery/
JQUERY_VERSION = "3.7.0"
# JQUERY_VERSION = '3.6.1'
JQUERY_URI = (
    f"https://cdnjs.cloudflare.com/ajax/libs/jquery/{JQUERY_VERSION}/jquery.slim.min.js"
)

# see https://cdnjs.com/libraries/bulma
#BULMA_VERSION = "0.9.4"
BULMA_VERSION = "1.0.2"
BULMA_URI = (
    f"https://cdnjs.cloudflare.com/ajax/libs/bulma/{BULMA_VERSION}/css/bulma.min.css"
)

DJANGO_HTMX_VERSION="2.0.2"
DJANGO_HTMX_URI=f"https://cdnjs.cloudflare.com/ajax/libs/htmx/{DJANGO_HTMX_VERSION}/htmx.min.js"

# see https://cdnjs.com/libraries/font-awesome
FONTAWESOME_VERSION = '6.6.0'
#FONTAWESOME_VERSION = "6.4.0"
FONTAWESOME_URI = f"https://cdnjs.cloudflare.com/ajax/libs/font-awesome/{FONTAWESOME_VERSION}/css/all.min.css"
FONTAWESOME_SCRIPT_URI = None  # f'https://kit.fontawesome.com/ad5033c5d1.js'
# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
# BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))
# print(BASE_DIR)
BASE_DIR = Path(__file__).resolve().parent.parent
# print(BASE_DIR)

if not DEBUG:
    CACHES = {
        "default": {
            "BACKEND": "django.core.cache.backends.db.DatabaseCache",
            "LOCATION": "cache_data_db_table",
            "TIMEOUT": 180,  # 20 minutes #300, # 5 minutes
            "OPTIONS": {
                "MAX_ENTRIES": 7500,
                "CULL_FREQUENCY": 3,
            },
        }
    }

# USER_AGENTS_CACHE = 'default'

# Before using the database cache, you must create the cache table with this command:
# python manage.py createcachetable


TEMPLATE_PATH = BASE_DIR / "templates"
# TEMPLATE_PATH = os.path.join(BASE_DIR, 'templates')

# MEDIA_ROOT = os.sep.join((str(BASE_DIR).split(os.sep)[0:-1]))
MEDIA_ROOT = BASE_DIR.resolve().parent
# MEDIA_ROOT =


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/1.9/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = "isk^$ye4rx0m!p#0147tcmmmtcz1u&suzp2+z+6#gpjx^1lz4t"

# SECURITY WARNING: don't run with debug turned on in production!

# session_cookie_expiration = 43200
# session_logout_timeout = 43200


# Application definition
STATIC_URL = "/static/"

INSTALLED_APPS = []
INSTALLED_APPS += [
    "grappelli",
    "django.contrib.admin",
    "django.contrib.auth",
    "django.contrib.contenttypes",
    "django.contrib.staticfiles",
    "django.contrib.sessions",
    "django.contrib.messages",
    "rest_framework",
    "django.contrib.sites",
    "django_user_agents",
    "django_jinja",
]

if DEBUG_TOOLBAR:
    INSTALLED_APPS += ("debug_toolbar",)

INSTALLED_APPS += [
    "allauth",
    "allauth.account",
    "allauth.socialaccount",
    "cache_watcher",
    "django_icons",
    #    'django_unicorn',
    "django_jinja.contrib._humanize",
    "django_extensions",
    "filetypes",
    "frontend",
    "quickbbs",
    "thumbnails",
    "DirScanning", "django_htmx",
]

SITE_ID = 1

SESSION_ENGINE = "django.contrib.sessions.backends.cached_db"

MIDDLEWARE = [
    "allauth.account.middleware.AccountMiddleware",
    "django.middleware.security.SecurityMiddleware",
    "django.middleware.cache.UpdateCacheMiddleware",
    "django.contrib.sessions.middleware.SessionMiddleware",
    "django.middleware.gzip.GZipMiddleware",
    "django.middleware.http.ConditionalGetMiddleware",
    "django.middleware.common.CommonMiddleware",
    "django.middleware.csrf.CsrfViewMiddleware",
    "django.contrib.auth.middleware.AuthenticationMiddleware",
    "django.contrib.messages.middleware.MessageMiddleware",
    "django.middleware.cache.FetchFromCacheMiddleware",
    "django.middleware.clickjacking.XFrameOptionsMiddleware",
    "django_user_agents.middleware.UserAgentMiddleware",
    "django_htmx.middleware.HtmxMiddleware",
    "debug_toolbar.middleware.DebugToolbarMiddleware",
]

#    'compression_middleware.middleware.CompressionMiddleware',
# Revisit the django-compression-middleware later, it works, but there is a
# perceivable slowdown on the other end (at least wireless/ipad connection on 5ghz).

if DEBUG:
    MIDDLEWARE.remove("django.middleware.cache.FetchFromCacheMiddleware")
    MIDDLEWARE.remove("django.middleware.cache.UpdateCacheMiddleware")

if not DEBUG_TOOLBAR:
    MIDDLEWARE.remove("debug_toolbar.middleware.DebugToolbarMiddleware")

X_FRAME_OPTIONS = "SAMEORIGIN"

ROOT_URLCONF = "quickbbs.urls"

TEMPLATES = [
    {
        "NAME": "Django",
        "BACKEND": "django.template.backends.django.DjangoTemplates",
        "DIRS": [
            TEMPLATE_PATH,
        ],
        "APP_DIRS": True,
        "OPTIONS": {
            "context_processors": [
                "django.template.context_processors.debug",
                "django.template.context_processors.request",
                "django.contrib.auth.context_processors.auth",
                "django.contrib.messages.context_processors.messages",
            ],
        },
    },
    # https://docs.djangoproject.com/en/2.1/ref/templates/api/#django.template.loaders.cached.Loader
    {
        "NAME": "Jinja2",
        "BACKEND": "django_jinja.backend.Jinja2",
        "APP_DIRS": True,
        "DIRS": [
            TEMPLATE_PATH,
        ],
        "OPTIONS": {  # 'environment': "quickbbs.jinjaenv.environment",
            # Match the template names ending in .html but not the ones in the admin folder.
            "match_extension": ".jinja",
            "extensions": [
                "jinja2.ext.do",
                "jinja2.ext.loopcontrols",
                "jinja2.ext.i18n",
#                "jinja2_humanize_extension.HumanizeExtension", # doesn't seem to work per docs?
                "django_jinja.builtins.extensions.CsrfExtension",
                "django_jinja.builtins.extensions.CacheExtension",
                "django_jinja.builtins.extensions.TimezoneExtension",
                "django_jinja.builtins.extensions.UrlsExtension",
                "django_jinja.builtins.extensions.StaticFilesExtension",
                "django_jinja.builtins.extensions.DjangoFiltersExtension",
            ],
            "globals": {
                "icon": "django_icons.templatetags.icons.icon_tag",
                "static": "django.templatetags.static.static",
                "url": "django.urls.reverse",
                "django_htmx_script": django_htmx_script,
                "any":any,
                "all":all,
                "naturaldelta":humanize.naturaldelta,
                "precisedelta":humanize.precisedelta,
            },
            "constants": {
                "bulma_uri": BULMA_URI,
                "fontawesome_uri": FONTAWESOME_URI,
                "fontawesome_script_uri": FONTAWESOME_SCRIPT_URI,
                "jquery_uri": JQUERY_URI,
                "django_htmx_uri":DJANGO_HTMX_URI,
            },
            "bytecode_cache": {
                "name": "default",
                "backend": "django_jinja.cache.BytecodeCache",
                "enabled": not DEBUG,  # needs to be negated, since TRUE for debug should be enabled - False
            },
            "autoescape": True,
            "auto_reload": True,
            "translation_engine": "django.utils.translation",
        },
    },
]

WSGI_APPLICATION = "quickbbs.wsgi.application"
# WSGI_APPLICATION = 'wsgi.application'

# Database
# https://docs.djangoproject.com/en/1.9/ref/settings/#databases
DATABASES = {
    "default": {
        "ENGINE": "django.db.backends.postgresql",
        "NAME": "postgres",
        "USER": "postgres",
        "PASSWORD": "hentai2020",
        "HOST": "localhost",
        "PORT": "5432",
        "CONN_MAX_AGE": 300,
    }
}

SOUTH_DATABASE_ADAPTERS = {
    "default": "south.db.postgresql_psycopg2",
}
AUTHENTICATION_BACKENDS = (
    # Needed to login by username in Django admin, regardless of `allauth`
    "django.contrib.auth.backends.ModelBackend",
    # `allauth` specific authentication methods, such as login by e-mail
    "allauth.account.auth_backends.AuthenticationBackend",
)

# Password validation
# https://docs.djangoproject.com/en/1.9/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        "NAME": "django.contrib.auth.password_validation.UserAttributeSimilarityValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.MinimumLengthValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.CommonPasswordValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.NumericPasswordValidator",
    },
]

# Internationalization
# https://docs.djangoproject.com/en/1.9/topics/i18n/
LANGUAGE_CODE = "en-us"
# TIME_ZONE = 'UTC'
# TIME_ZONE = 'UTC'
USE_I18N = True
USE_TZ = True

# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/1.9/howto/static-files/

STATIC_URL = "/static/"

STATIC_ROOT = os.path.join(BASE_DIR, "static")

STATICFILES_DIRS = [
    os.path.join(BASE_DIR, "static", "javascript"),
    os.path.join(BASE_DIR, "static", "css"),
    os.path.join(BASE_DIR, "static", "fonts"),
    #    os.path.join(BASE_DIR, "static", "thumbnails"),
]

ACCOUNT_AUTHENTICATED_LOGIN_REDIRECTS = True
ACCOUNT_LOGOUT_REDIRECT_URL = "/albums"
LOGIN_REDIRECT_URL = "/albums"


DEFAULT_AUTO_FIELD = "django.db.models.AutoField"

# Settings for django-icons
DJANGO_ICONS = {
    "DEFAULTS": {
        "renderer": "fontawesome4",
    },
}


def show_toolbar(request):
    return DEBUG_TOOLBAR is True


if DEBUG_TOOLBAR:
    DEBUG_TOOLBAR_CONFIG = {
        # Toolbar options
        "RESULTS_CACHE_SIZE": 100,
        "SHOW_COLLAPSED": False,
        "SHOW_TOOLBAR_CALLBACK": show_toolbar,
        "SQL_WARNING_THRESHOLD": 100,  # milliseconds
        "SHOW_TEMPLATE_CONTEXT": True,
    }

    DEBUG_TOOLBAR_PANELS = [
        "debug_toolbar.panels.history.HistoryPanel",  # Here it is
        "debug_toolbar.panels.versions.VersionsPanel",
        "debug_toolbar.panels.timer.TimerPanel",
        "debug_toolbar.panels.settings.SettingsPanel",
        "debug_toolbar.panels.headers.HeadersPanel",
        "debug_toolbar.panels.request.RequestPanel",
        "debug_toolbar.panels.sql.SQLPanel",
        "debug_toolbar.panels.templates.TemplatesPanel",
        "debug_toolbar.panels.staticfiles.StaticFilesPanel",
        "debug_toolbar.panels.cache.CachePanel",
        "debug_toolbar.panels.signals.SignalsPanel",
        "debug_toolbar.panels.logging.LoggingPanel",
        "debug_toolbar.panels.redirects.RedirectsPanel",
    ]
